/****************************************************************************
**
** Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
** All rights reserved.
** Contact: Nokia Corporation (qt-info@nokia.com)
**
** This file is part of the Qt3D documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \page index.html
    \title Qt3D Reference Documentation
    \keyword Qt3D Reference Documentation

    \image icon-qt3d.png

    Qt 3D adds \bold{3D content} to \l{http://qt.nokia.com/qtquick/}{Qt Quick's} cross-platform ability and coding power.
    Developers of fluid user interfaces can now enhance their applications with 3D
    content in the same way icons and pixmaps would be used in a 2D application.

    Qt3D comes with two libraries:

    \table
    \header
        \o Library
        \o API provided
        \o Functionality
        \o Useful For
    \row
        \o Qt3DQuick
        \o QML API
        \o QML bindings for Qt3D
        \o Writing 3D apps in QML using declarative animations and techniques.
    \row
        \o Qt3D
        \o C++ API
        \o 3D rendering, scene-management and asset loading, plus more.
        \o Extending QML3D and for writing 3D in Qt C++ instead of complex C-style OpenGL code.
    \endtable

    The QML bindings create a whole new declarative way to write 3D applications, where the
    naturally nested scopes of QML work to create 3D scene-graphs, and QML animations and easing-
    curves can be easily applied to 3D objects.  We call this \bold{QML3D}.

    Thus QML3D is the Qt Quick tool for scripting 3D applications in QML. Apps can be
    2D QML applications with a small amount of simple 3D content; through to complex
    3D scenes, containing 3D assets - such as complex 3D models, and shader effects.

    Qt3D research continues and if the features you're looking for are not in Qt3D
    yet you may find them in the \l{http://qt.gitorious.org/qt-labs/qt3d}{Qt3D research project}.

    Check the Qt3D research project for features like \bold{stereoscopic support},
    which will enable your programs to take advantage of special hardware that displays a different image to each eye.
    We have done some work in Qt3D for stereo support and in some places you may see references to it,
    however it is \bold{not supported currently}.

    See the \l{Tutorials and Examples} for an introduction to using Qt3D.

    \table 100%
    \header
        \o Getting Started
        \o Functionality Areas
        \o API Reference
    \row
        \o \list
            \o \l{qt3d-building.html}{Building}
            \o \l{qt3d-examples.html}{Tutorials and Examples}
            \o \l{qt3d-contrib.html}{Contributing}
            \o \l{qt3d-acceptance.html}{Acceptance tests}
            \o \l{qt3d-troubleshooting.html}{Troubleshooting Qt3D}
        \endlist

        \o \list
            \o \l{Qt3D Arrays and Vertex Buffers}{Arrays and Vertex Buffers}
            \o \l{Qt3D Geometry}{Geometry Building}
            \o \l{Qt3D Graphics View Integration}{Graphics View Integration}
            \o \l{Qt3D Materials}{Materials}
            \o \l{Qt3D Math}{Mathematical Primitives}
            \o \l{Qt3D Painting}{Painting in 3D}
            \o \l{Qt3D Scene Management}{Scene Management}
            \o \l{Qt3D Texture Handling}{Texture Management}
            \o \l{Qt3D Viewing}{Viewing Widgets}
        \endlist

        \o \list
            \o \l{qt3d-all-classes.html}{All Classes}
            \o \l{All Namespaces}{QGL Namespace}
            \o \l{Qt3D for Scripting 3D Apps in QML}{QtQuick3D Elements}
            \o \l{Stock Shapes for Qt3D}{QML/3D Stock Shapes}
        \endlist
    \endtable
*/
