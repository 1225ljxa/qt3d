/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the Qt3D documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example quick3d/cube
    \title Cube Example

    \target Cube in QML
    \section2 Cube in QML

    The QML version of the cube example is very similar in
    structure to the C++ version, but much simpler.  As with all Qt3D QML examples
    we must include the QtQuick import, and our Qt3D import.  Since we
    are using the stock Cube shape we must use the Qt3D.Shapes import as well.

    We start by defining a viewport with a blue fill to make the cube stand
    out, and we also tell the viewport to use DirectRender:

    \snippet ../../examples/quick3d/cube/qml/Cube.qml 1

    A basic static rotation is applied, so that the cube appears in the
    window in a nice orientation initially.

    We then add an \l Cube object to load the cube model and
    apply the desired texture to it.

    \image cube-screenshot.png

    \l{qt3d-examples.html}{Return to Examples}.
*/
